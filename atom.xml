<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Haiyang</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wudiufo.github.io/"/>
  <updated>2018-12-07T10:54:59.299Z</updated>
  <id>http://wudiufo.github.io/</id>
  
  <author>
    <name>Haiyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VMware Workstation Pro激活</title>
    <link href="http://wudiufo.github.io/2018/12/07/VMware-Workstation-Pro%E6%BF%80%E6%B4%BB/"/>
    <id>http://wudiufo.github.io/2018/12/07/VMware-Workstation-Pro激活/</id>
    <published>2018-12-07T10:46:11.000Z</published>
    <updated>2018-12-07T10:54:59.299Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><blockquote><p>到 <a href="https://my.vmware.com/cn/web/vmware/info/slug/desktop_end_user_computing/vmware_workstation_pro/15_0" target="_blank" rel="noopener">VMware Workstations</a> 官网下载对应版本的虚拟机。</p></blockquote><h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><blockquote><p>VMware Workstation Pro 15.0.2 官方版+激活密钥:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; ZC10K-8EF57-084QZ-VXYXE-ZF2XF</span><br><span class="line">&gt; </span><br><span class="line">&gt; UF71K-2TW5J-M88QZ-8WMNT-WKUY4</span><br><span class="line">&gt; </span><br><span class="line">&gt; AZ7MK-44Y1J-H819Z-WMYNC-N7ATF</span><br><span class="line">&gt; </span><br><span class="line">&gt; CU702-DRD1M-H89GP-JFW5E-YL8X6</span><br><span class="line">&gt; </span><br><span class="line">&gt; YY5EA-00XDJ-480RP-35QQV-XY8F6</span><br><span class="line">&gt; </span><br><span class="line">&gt; VA510-23F57-M85PY-7FN7C-MCRG0</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;到 &lt;a href=&quot;https://my.vmware.com/cn/web/vmware/info/slug/
      
    
    </summary>
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Adobe系列软件破解</title>
    <link href="http://wudiufo.github.io/2018/12/07/Adobe%E7%B3%BB%E5%88%97%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3/"/>
    <id>http://wudiufo.github.io/2018/12/07/Adobe系列软件破解/</id>
    <published>2018-12-07T07:04:18.000Z</published>
    <updated>2018-12-07T13:06:20.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><blockquote><p>到 <a href="https://www.adobe.com/cn/downloads.html" target="_blank" rel="noopener">Adobe 官网</a>  下载你需要的对应的软件。</p></blockquote><h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><blockquote><ol><li><p>到百度网盘下载 <a href="https://pan.baidu.com/s/1CQHi48k7X-0KPpIOB9t7sw" target="_blank" rel="noopener">Adobe 全能软件破解器</a></p><p>提取码: cy4p </p></li><li><p>下载完解压到对应的目录，双击运行 <code>amtemu.v0.9.2-painter.exe</code> ，选择好要破解的Adobe软件，点击 <code>Install</code> 运行安装，选择对应软件的 <code>amtlib.dll</code> 文件，自动替换为破解后的 <code>amtlib.dll</code> 文件，出现 OK 就是破解成功。</p></li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;到 &lt;a href=&quot;https://www.adobe.com/cn/downloads.html&quot; targe
      
    
    </summary>
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>WebStorm (Jetbrains) 全系列软件永久破解方法</title>
    <link href="http://wudiufo.github.io/2018/12/07/WebStorm-Jetbrains-%E5%85%A8%E7%B3%BB%E5%88%97%E8%BD%AF%E4%BB%B6%E6%B0%B8%E4%B9%85%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/"/>
    <id>http://wudiufo.github.io/2018/12/07/WebStorm-Jetbrains-全系列软件永久破解方法/</id>
    <published>2018-12-07T07:04:18.000Z</published>
    <updated>2018-12-07T10:43:13.560Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ul><li>这里以下载 WebStorm 来演示，其他都一样。</li></ul><blockquote><p>到官网 <a href="https://www.jetbrains.com/webstorm/download/#section=windows" target="_blank" rel="noopener">WebStorm</a> 下载软件，还可以点击 <a href="https://www.jetbrains.com/webstorm/download/previous.html" target="_blank" rel="noopener">Previous versions</a> 下载之前的版本。</p><p><strong>注意：由于 WebStorm 最新版不太稳定，用破解补丁破解容易出现闪退现象，建议不下载最新版本的WebStorm</strong></p></blockquote><h2 id="破解补丁激活WebStorm"><a href="#破解补丁激活WebStorm" class="headerlink" title="破解补丁激活WebStorm"></a>破解补丁激活WebStorm</h2><blockquote><ol><li><p>到百度网盘下载 <a href="https://pan.baidu.com/s/1mcQM8CLUnweY02ahKEr4PQ" target="_blank" rel="noopener">文件</a>  ，JetbrainsCrack-release-enc.jar，放置到 WebStorm安装目录的\bin目录下（位置可随意，只要配置文件填写相对应的路径）。</p></li><li><p>在 WebStorm安装目录的\bin目录下找到 WebStorm.exe.vmoptions 和 WebStorm64.exe.vmoptions ，以文本格式打开并同时在两个文件最后追加  -javaagent:G:\你WebStorm的安装路径\bin\JetbrainsCrack-release-enc.jar，注意路径修改成你的WebStorm安装路径，然后保存。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;    -javaagent:G:\webstorm\WebStorm 2018.3.1\bin\JetbrainsCrack-release-enc.jar</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="3"><li><p>启动WebStorm ,选择激活码激活，输入如下内容激活:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&gt;     </span><br><span class="line">&gt;    ThisCrackLicenseId-&#123;</span><br><span class="line">&gt;    &quot;licenseId&quot;:&quot;11011&quot;,</span><br><span class="line">&gt;    &quot;licenseeName&quot;:&quot;WeChat&quot;,</span><br><span class="line">&gt;    &quot;assigneeName&quot;:&quot;IT--Pig&quot;,</span><br><span class="line">&gt;    &quot;assigneeEmail&quot;:&quot;1113449881@qq.com&quot;,</span><br><span class="line">&gt;    &quot;licenseRestriction&quot;:&quot;&quot;,</span><br><span class="line">&gt;    &quot;checkConcurrentUse&quot;:false,</span><br><span class="line">&gt;    &quot;products&quot;:[</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;II&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;DM&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;AC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;RS0&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;WS&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;DPN&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;RC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;PS&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;DC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;RM&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;CL&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&gt;    &#123;&quot;code&quot;:&quot;PC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;</span><br><span class="line">&gt;    ],</span><br><span class="line">&gt;    &quot;hash&quot;:&quot;2911276/0&quot;,</span><br><span class="line">&gt;    &quot;gracePeriodDays&quot;:7,</span><br><span class="line">&gt;    &quot;autoProlongated&quot;:false&#125;</span><br><span class="line">&gt;    </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;这里以下载 WebStorm 来演示，其他都一样。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;到官网 &lt;a href
      
    
    </summary>
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Windows10破解</title>
    <link href="http://wudiufo.github.io/2018/12/07/Windows10%E7%A0%B4%E8%A7%A3/"/>
    <id>http://wudiufo.github.io/2018/12/07/Windows10破解/</id>
    <published>2018-12-07T07:04:18.000Z</published>
    <updated>2018-12-07T13:03:27.778Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><blockquote><p>到 <a href="https://www.microsoft.com/zh-cn/software-download/windows10" target="_blank" rel="noopener">Windows 10</a> 官网，按照具体步骤下载Windows10系统</p></blockquote><h1 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h1><blockquote><ol><li>到百度网盘下载 <a href="https://pan.baidu.com/s/12OLtwrD0kYSqViC3yHgZ5Q" target="_blank" rel="noopener">破解器</a></li></ol><p>提取码: nrzr </p><ol start="2"><li>下载完解压到对应的文件夹下，单击运行，稍等一会，破解就成功了。</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;到 &lt;a href=&quot;https://www.microsoft.com/zh-cn/software-downl
      
    
    </summary>
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>faststone capture 注册码</title>
    <link href="http://wudiufo.github.io/2018/12/07/faststone%20capture%20%E6%B3%A8%E5%86%8C%E7%A0%81/"/>
    <id>http://wudiufo.github.io/2018/12/07/faststone capture 注册码/</id>
    <published>2018-12-07T07:04:18.000Z</published>
    <updated>2018-12-07T11:33:35.156Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><blockquote><p>点击 <a href="http://baoku.360.cn/soft/search?kw=faststone%20capture" target="_blank" rel="noopener">FastStone Capture</a>  下载软件</p></blockquote><h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><blockquote><p>FastStone Capture 8.4 注册码:</p><p>name：bluman<br>　　serial/序列号/注册码：VPISCJULXUFGDDXYAUYF</p></blockquote><p><strong>FastStone Capture 是一款很好用的截图软件，推荐使用</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;点击 &lt;a href=&quot;http://baoku.360.cn/soft/search?kw=faststone%
      
    
    </summary>
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Mark Man 软件破解方法</title>
    <link href="http://wudiufo.github.io/2018/12/07/Mark-Man-%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/"/>
    <id>http://wudiufo.github.io/2018/12/07/Mark-Man-软件破解方法/</id>
    <published>2018-12-07T06:49:34.000Z</published>
    <updated>2018-12-07T13:09:01.625Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><blockquote><p>点击 <a href="http://www.getmarkman.com/" target="_blank" rel="noopener">Mark Man</a>  到官网下载软件。</p></blockquote><h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><blockquote><p>到 <a href="https://pan.baidu.com/s/1ggc9kb5hUYPURRim_yJAbw" target="_blank" rel="noopener">百度网盘</a>, 下载 Mark Man 破解版的压缩包，解压到对应的文件夹下。<br>提取码: b68y </p><p>安装好MarkMan之后，去安装根目录替换MarkManOne.swf破解成功，无广告，可以保存编辑状态。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;点击 &lt;a href=&quot;http://www.getmarkman.com/&quot; target=&quot;_blank&quot; r
      
    
    </summary>
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="前端必备软件" scheme="http://wudiufo.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Git基础知识</title>
    <link href="http://wudiufo.github.io/2018/12/04/Git%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://wudiufo.github.io/2018/12/04/Git基础知识/</id>
    <published>2018-12-04T13:36:33.000Z</published>
    <updated>2018-12-09T09:10:01.365Z</updated>
    
    <content type="html"><![CDATA[<h3 id="GIT基础知识"><a href="#GIT基础知识" class="headerlink" title="GIT基础知识"></a>GIT基础知识</h3><ul><li><ol><li><h4 id="什么是git？"><a href="#什么是git？" class="headerlink" title="什么是git？"></a>什么是git？</h4><a id="more"></a><blockquote><p>分布式版本控制系统，它是由Linux（全球比较大的服务器系统）创始人花两周使用C语言编写的，(在GIT命令窗口中一般是执行Linux命令)</p><ol><li><p>什么是版本控制系统？</p><p>能够把之前操作的具体信息记录下来，方便日后的更改。 </p><ul><li>备份文件</li><li>记录历史</li><li>回到过去</li><li>多端共享</li><li>团队协作</li></ul></li><li><p>常用的版本控制系统</p><ul><li>git：分布式版本控制系统</li><li>svn：集中式版本控制系统</li></ul><blockquote><p><strong>面试题</strong>：分布式和集中式的区别？</p><p>[集中式]：<img src="/2018/12/04/Git基础知识/集中式.jpg" alt="集中式"></p><ul><li>想要做历史记录的查看或者备份，必须连接到中央服务器才可以（需要联网）</li><li>处理速度没有git快</li></ul><p>[分布式]：<img src="/2018/12/04/Git基础知识/分布式.jpg" alt="分布式"></p><ul><li>每个开发者本地都是一个单独的仓库，在自己的仓库中就可以完成历史版本记录和查看（不需要联网）</li><li>git处理的速度更快（git是按照数据存储的）</li></ul></blockquote></li></ol></blockquote></li></ol></li></ul><h3 id="Linux操作系统中常用的命令"><a href="#Linux操作系统中常用的命令" class="headerlink" title="Linux操作系统中常用的命令"></a>Linux操作系统中常用的命令</h3><ul><li><p>ls：查看当前目录下的文件（或文件夹）</p><ul><li><p>-l ：查看详细信息</p></li><li><p>-a：查看隐藏文件</p></li><li><p>-la：同时具备以上特点</p></li></ul></li><li>clear：清屏</li><li><p>cd: 目录切换</p><ul><li>cd ../ 返回上级目录</li><li>cd ./  返回当前目录</li><li>cd /  返回根目录</li><li>cd xxx  进入到指定文件夹</li><li>cd E  进入到指定的磁盘</li></ul></li><li><p>mkdir 创建文件夹</p></li><li><p>touch 创建一个空文件</p><ul><li>可以创建无文件名的文件，例如：<code>touch .gitignore</code></li><li>在电脑隐藏文件后缀名的情况下，我们也不至于创建出1.txt.txt这样重复后缀名的文件</li></ul></li><li><p>vi 向指定文件中插入内容 例如：vi.txt</p><ul><li>首先进入命令窗口模式</li><li>我们先按i，进入到插入内容模式</li><li>编辑需要写的内容</li><li>按ESC键，再按英文下的 : 键，再按wq（保存并退出）</li><li>按 q！（强制退出，新输入的内容不保存）</li></ul></li><li><p>echo xxx &gt; 1.txt   把xxx内容放到1.txt文件中，如果没有这个文件则创建这个文件（新存放的内容会替换原有文件的内容）</p></li><li>echo xxx &gt;&gt; 1.txt  新的内容会追加到原有内容的后面</li><li>cat  查看文件中的内容</li><li>cp  拷贝文件</li><li>rm 删除文件<ul><li>-r  递归删除（把当前文件夹中所有的后代元素都遍历到删除）</li><li>-f  强制删除</li><li>-rf 上面两种合并到一起，没有办法还原回来，使用要慎重</li></ul></li></ul><h3 id="Git的工作原理和流程"><a href="#Git的工作原理和流程" class="headerlink" title="Git的工作原理和流程"></a>Git的工作原理和流程</h3><blockquote><p>安装完成git后，我们应该先把基础信息配置一下（自己需要配置一次即可）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; $ git config -l 查看当前本机的配置清单</span><br><span class="line">&gt; $ git config --global user.name xxx </span><br><span class="line">&gt; $ git config --global user.email xxx</span><br><span class="line">&gt; (xxx写github/coding等平台的账号和邮箱)</span><br><span class="line">&gt; </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="Git的工作流程"><a href="#Git的工作流程" class="headerlink" title="Git的工作流程"></a>Git的工作流程</h4><blockquote><p>Git是分布式版本控制系统，每一台客户端都是一个独立的git仓库（有git工作的全套机制）</p><p>一个git仓库分为三个区域;</p><ol><li>工作区：平时写代码的地方</li><li>暂存区：写好的一些代码暂时存储的地方</li><li>历史区：生成一个个版本记录得地方</li></ol><p><img src="/2018/12/04/Git基础知识/git的工作流程.jpg" alt="git的工作流程"></p></blockquote><h5 id="1-创建GIT仓库"><a href="#1-创建GIT仓库" class="headerlink" title="1.创建GIT仓库"></a>1.创建GIT仓库</h5><blockquote><p>在指定目录中，打开git bash命令行，执行 <code>git init</code> ，相当于以当前目录作为基础，创建了一个本地git仓库 </p><p>创建完成后，会在项目的根目录中展示 .git 这个隐藏文件：有这个.git文件的才叫做git仓库，没有则不能被称为git仓库（因为暂存区和历史区都是存在 .git 文件夹中的）</p></blockquote><h5 id="2-把工作区的内容提交到暂存区"><a href="#2-把工作区的内容提交到暂存区" class="headerlink" title="2.把工作区的内容提交到暂存区"></a>2.把工作区的内容提交到暂存区</h5><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; $ git add xxx  把某个文件提交到暂存区</span><br><span class="line">&gt; $ git add . 把所有修改的文件（修改和新增的包含，删除的不包含）提交到暂存区</span><br><span class="line">&gt; $ git add -u 把所有修改的文件（包含修改和删除的，不包含新增的）</span><br><span class="line">&gt; $ git add -A 是点和u的集合体，（所有修改，新增，删除的信息都会提交到暂存区），但是真实效果中两者都差不多，用哪个都可以</span><br><span class="line">&gt; </span><br><span class="line">&gt; </span><br><span class="line">&gt; $ git status 查看当前文件的状态</span><br><span class="line">&gt; 红色：在工作区中，还没有提交到暂存区</span><br><span class="line">&gt; 绿色：在暂存区中，还没有提交到历史区</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><ul><li><p>如果在提交的时候，有些内容不想提交，我们可以增加git提交的忽略文件：  <code>.gitignore</code>  (没有文件名只有后缀名)</p></li><li><p>.gitignore 中的信息：</p><blockquote><p>.idea   // 使用WS打开项目或者编辑项目，自动会生成的文件</p><p>node_modules  //  使用npm安装模块的时候，当前安装在项目中的第三方模块都在这个文件夹中（之所以忽略是因为文件太大了）</p><p>.DS_Store (mac本中的文件)等等</p></blockquote></li></ul></blockquote><h5 id="3-把暂存区提交到历史区"><a href="#3-把暂存区提交到历史区" class="headerlink" title="3.把暂存区提交到历史区"></a>3.把暂存区提交到历史区</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git commit</span><br><span class="line"></span><br><span class="line">$ git commit -m<span class="string">'注释内容'</span></span><br><span class="line"></span><br><span class="line">$ git commit -a -m<span class="string">'注释内容'</span>  </span><br><span class="line">把提交到暂存区和提交到历史区合并到一起完成。但是只适合已经提交过一次的文件，被修改后可以快速提交。但是对于新增的文件，一次都没有提交过的，是不允许这样操作的。</span><br></pre></td></tr></table></figure><p>【root-commit】根提交：</p><ul><li>简单理解为：第一次提交到历史区域，如果我们创建一个新的仓库。但是没有做根提交，此时我们仓库中没有任何分支（哪怕是master），也就不存在所谓的分支切换（当前仓库还不完整，只有一个工作流程走完一遍才算完整）</li></ul><h5 id="4-工作流中的一些细节知识："><a href="#4-工作流中的一些细节知识：" class="headerlink" title="4.工作流中的一些细节知识："></a>4.工作流中的一些细节知识：</h5><blockquote><p>不管是从工作区提交到暂存区，还是从暂存区提交到历史区，每一个区域当前的内容是已知保存下来的不会消失。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">或</span><br><span class="line">$ git reflog</span><br></pre></td></tr></table></figure><blockquote><p>都是查看历史提交记录的（也相当于查看历史版本号），在没有历史版本回滚的时候，我们用哪个都可以。如果有历史版本回滚，<code>git log</code> 只能查看当前回退版本以前的版本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rm --cached . -r</span><br></pre></td></tr></table></figure><blockquote><p>可以把 <code>.</code> 替换为具体的文件名，这条命令的意思是：</p><p>从暂存区把所有内容（或者是你指定的具体文件）都撤回到工作区（不管暂存区中的内容是否已经提交到历史版本上了，也不管是你第几次放到暂存区的，统统撤回到工作区）</p><p><strong>这种方式太暴力，我们用的很少，不推荐使用</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout .</span><br></pre></td></tr></table></figure><blockquote><p>这条命令的意思是：</p><p>把暂存区内容撤回工作去（覆盖现有工作区中的内容无法找回）。</p><p>也可以理解为：用上一个暂存区存储的内容覆盖现有工作区的内容，工作区内容变为和上一个暂存区一样的内容，暂存区内容还在。</p><p>存在问题：只能限制当前代码还没有提交的情况，当前代码没提交回滚的是上一次提交到暂存区的内容（和工作区内容不一样）；如果当前这次也提交了，暂存区和工作区一样，回滚回来也是一样的，这个方式就解决不了了。</p><p>解决问题：</p><ol><li>输入命令 <code>$ git reset HEAD .</code> : 在暂存区中，回滚到上一次暂存区中记录的内容（暂存区先回滚一次）</li><li>输入命令  <code>$ git checkout .</code>  : 把最新暂存区的内容回滚到工作区，替换工作区中的内容</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure><blockquote><p>工作区 VS 暂存区 ：<code>git diff</code></p><p>工作区 VS 历史区 ： <code>git diff master</code></p><p>暂存区 VS 历史区 ： <code>git diff --cached</code></p><p>查看不同区域之间代码的不同，我们一般都是基于可视化的页面来查看不一样的</p></blockquote><p><strong>最重要的代码回滚技巧：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard 版本号</span><br></pre></td></tr></table></figure><blockquote><p><code>git log</code> 可以查看版本号</p><p>回滚的时候指定的版本号不一定非常全，有七八位即可</p><p>当我们回滚到某一个历史版本之后，暂存区和工作区的内容都将被这个版本内容所代替</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">history</span> &gt; xxx.txt    //（把历史操作步骤输出）</span><br></pre></td></tr></table></figure><h3 id="团队协作开发下的git操作"><a href="#团队协作开发下的git操作" class="headerlink" title="团队协作开发下的git操作"></a>团队协作开发下的git操作</h3><blockquote><ul><li>前面讲的都是单独开发，在自己本地建立git仓库的一系列操作流程，在团队写作开发下，流程还是有所区别的</li></ul></blockquote><h4 id="1-创建中央仓库"><a href="#1-创建中央仓库" class="headerlink" title="1. 创建中央仓库"></a>1. 创建中央仓库</h4><blockquote><ul><li><p>一般是由团队技术LEADER或者指派人完成的，仓库中默认是有一些初始化文件的</p></li><li><p>中央仓库可能是在：gitHub，Coding，自己公司的git仓库服务平台，自己公司的服务器等…</p></li><li><ol><li><p>基于gitHub创建远程仓库，创建完成后会生成一个远程地址，例如： <code>https//github.com/username/Repository name.git</code></p></li><li><p>作为LEADER，还需要把项目中一些基础的信息提交到远程仓库上：</p><blockquote><ol><li>在自己本地创建一个仓库，把一些基础内容都放在仓库中</li><li>把新增加的内容提交到本地仓库历史区中</li><li>让本地仓库和远程仓库保持关联</li><li>把本地仓库历史区中的信息同步（推送）到远程仓库上</li></ol></blockquote></li></ol></li><li><p>让本地仓库和远程仓库保持关联：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; $ git remote add 名字（一般都叫做origin） 远程仓库地址</span><br><span class="line">&gt; </span><br><span class="line">&gt; $ git remote rm 名字  // 移除关联</span><br><span class="line">&gt; </span><br><span class="line">&gt; $ git remote -v   // 查看当前仓库和哪些远程仓库保持关联</span><br><span class="line">&gt; </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><ul><li><p>让本地历史区信息和远程仓库信息保持同步：</p><p>第一种方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;   $ git push origin master</span><br><span class="line">&gt;   // 把本地信息推送到远程仓库上</span><br><span class="line">&gt;   </span><br><span class="line">&gt;   $ git pull origin master</span><br><span class="line">&gt;   // 把远程的拉取到本地仓库</span><br><span class="line">&gt;   </span><br><span class="line">&gt;   （origin 是本地和远程仓库关联的那个名字，master 是远程仓库的主分支）</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><p>  第二种方法：（推荐使用）</p><blockquote><p>我们创建完成后远程仓库后，可以直接通过 <code>git clone 仓库地址 仓库别名（可以不写）</code> 的方式把远程仓库克隆到本地：</p><p>相当于在本地创建了一个仓库</p><p>也让本地这个仓库和远程仓库保持了连接（名字：origin）</p><p>也把远程仓库现有的内容克隆到了本地</p></blockquote></blockquote><h4 id="2-无分支模式下的团队协作"><a href="#2-无分支模式下的团队协作" class="headerlink" title="2. 无分支模式下的团队协作"></a>2. 无分支模式下的团队协作</h4><blockquote><p>作为开发者每天来的第一件事情或者提交代码之前，都要先pull一下</p><ol><li>【如果远程仓库和本地仓库不是同一个文件同一行代码冲突】</li></ol><blockquote><p>git 会自动依赖于 Fast-forward 模式进行合并</p><p>自动合并后，我们重新提交即可 <code>git add/commit/push</code></p></blockquote><ol start="2"><li><p>【同一个文件的同一行代码冲突】</p><blockquote><p>找到冲突的文件，留下自己想要的代码</p><p>不管之前是否commit过，都要重新的commit，然后push即可</p></blockquote></li></ol></blockquote><h4 id="2-单独分支管理"><a href="#2-单独分支管理" class="headerlink" title="2.单独分支管理"></a>2.单独分支管理</h4><blockquote><ol><li><p>每天第一件事情，就是创建一个dev分支并切换到这个分支上</p></li><li><p>正常的开发代码，把每天开发的任务都先提交到自己的分支上</p></li><li><p>提交到远程仓库上：</p><blockquote><p>把本地自己分支DEV中的内容，合并到本地自己的MASTER 分支下</p><p>把自己本地创建的分支删除（可以不删除，但是有的公司不希望远程中出现分支，或者避免开发人员的分支冲突，提交之前都要把自己创建的分支删除掉）</p></blockquote></li><li><p>和第一种只使用MASTER分支一样了，把本地最新合并的MASTER分支代码，提交到远程仓库的MADTER下，（冲突合并即可）</p></li></ol><ul><li><p>操作分支的基础命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;   $ git branch  //查看现有的分支</span><br><span class="line">&gt;   $ git branch xxx  //创建一个新的分支（当切换到某个分支上的时候，会把当前MASTER分支中的新信息同步到这个分支上）</span><br><span class="line">&gt;   $ git checkout xxx  //切换到某个分支上</span><br><span class="line">&gt;   $ git checkout -b xxx  //创建一个新的分支并且切换到这个分支上</span><br><span class="line">&gt;   $ git branch -D xxx  //删除某个分支（一定要切换到其他分支上才可以删除当前分支）</span><br><span class="line">&gt;   $ git merge xxx  //合并分支内容</span><br><span class="line">&gt;   $ git <span class="built_in">log</span> --graph / --oneline  //再有分支的情况下，可以更清楚地查看分支的提交和合并内容（了解就好）</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></blockquote><h3 id="GitHub界面操作"><a href="#GitHub界面操作" class="headerlink" title="GitHub界面操作"></a>GitHub界面操作</h3><h4 id="给别的仓库提交代码修改或建议"><a href="#给别的仓库提交代码修改或建议" class="headerlink" title="给别的仓库提交代码修改或建议"></a>给别的仓库提交代码修改或建议</h4><blockquote><ol><li><p>首先fork别人的仓库</p><blockquote><ul><li>把别人的仓库克隆一份一模一样的，放到自己的账号下，变为自己的仓库（我们平时可以修改自己仓库的源码）</li><li>fork的仓库和别人的原始的仓库会默认建立一些关系，我们可以把自己仓库中和别人不一样的地方，提交给别人，用（pull-request）</li></ul></blockquote></li></ol></blockquote><blockquote><ol start="2"><li><p>把自己fork的仓库，克隆到本地</p><blockquote><ul><li>以后自己有一些新的代码心得，可以自己尝试去修改，然后同步到自己fork的仓库中</li></ul></blockquote></li><li>在github中点击 new pull request</li></ol></blockquote><h3 id="GitHub还可以发布非后台项目"><a href="#GitHub还可以发布非后台项目" class="headerlink" title="GitHub还可以发布非后台项目"></a>GitHub还可以发布非后台项目</h3><blockquote><p>GitHub只提供了web站点的发布，后台项目没有提供必要的环境</p><ul><li><p>把整个仓库作为一个项目发布（这种模式不常用）</p></li><li><p>master是项目代码，gh-pages分支下存储的是项目预览页面的代码</p><blockquote><p>其他人克隆研究的是master分支下的代码</p><p>看介绍页面，看的是gh-pages分支下的代码</p><ol><li>创建一个仓库</li><li>把仓库克隆到本地</li><li>把源码传到master分支上</li><li>在本地仓库中创建gh-pages分支</li><li>把介绍页面放在gh-pages分支下</li><li>把介绍页面的内容上传到github的gh-pages分之下</li></ol><p>访问页面：http://用户名.github.io/仓库名/页面名.html  （如果页面是index可以忽略不写）</p></blockquote></li></ul></blockquote><h2 id="把自己写的纯静态页面项目通过github地址可以看到页面效果"><a href="#把自己写的纯静态页面项目通过github地址可以看到页面效果" class="headerlink" title="把自己写的纯静态页面项目通过github地址可以看到页面效果"></a>把自己写的纯静态页面项目通过github地址可以看到页面效果</h2><blockquote><p>第一步，在github上新建一个仓库，把远程仓库通过 <code>git clone xxx</code>克隆到本地</p><p>第二步，把自己写好的作品放在本地仓库中</p><p>第三步，通过<code>git add -A</code>  , <code>git commit -m</code>, <code>git push origin master</code>  三步操作，把自己的项目同步到远程仓库github中</p><ul><li>以后修改后，重新执行这三步推送即可</li></ul><p>在投简历的时候，把网址 <code>https://用户名.github.io/仓库名</code> 写到简历上就可以访问到页面效果。如果觉得地址太长不好记，也可以通过<a href="https://cli.im" target="_blank" rel="noopener">草料二维码</a> ,来制作自己喜欢的二维码</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;GIT基础知识&quot;&gt;&lt;a href=&quot;#GIT基础知识&quot; class=&quot;headerlink&quot; title=&quot;GIT基础知识&quot;&gt;&lt;/a&gt;GIT基础知识&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;&lt;h4 id=&quot;什么是git？&quot;&gt;&lt;a href=&quot;#什么是git？&quot; class=&quot;headerlink&quot; title=&quot;什么是git？&quot;&gt;&lt;/a&gt;什么是git？&lt;/h4&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="Git" scheme="http://wudiufo.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="http://wudiufo.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Node+Git搭建博客</title>
    <link href="http://wudiufo.github.io/2018/12/03/Hexo-Node-Git%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://wudiufo.github.io/2018/12/03/Hexo-Node-Git搭建博客/</id>
    <published>2018-12-03T12:40:38.000Z</published>
    <updated>2018-12-07T08:21:06.480Z</updated>
    
    <content type="html"><![CDATA[<p>从零开始搭建博客第一部分，Github注册及Github Pages建立</p><h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><h3 id="Hexo-是一个快速、简洁且高效的博客框架。Hexo-使用-Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。"><a href="#Hexo-是一个快速、简洁且高效的博客框架。Hexo-使用-Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。" class="headerlink" title="Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。"></a><a href="https://hexo.io/zh-cn/docs/#什么是-Hexo？" target="_blank" rel="noopener">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="https://maxiang.io/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</h3><a id="more"></a><h2 id="一：注册Github"><a href="#一：注册Github" class="headerlink" title="一：注册Github"></a>一：注册Github</h2><h3 id="1：打开Github首页，点击Sign-up-进行注册。"><a href="#1：打开Github首页，点击Sign-up-进行注册。" class="headerlink" title="1：打开Github首页，点击Sign up 进行注册。"></a>1：打开<a href="https://github.com/" target="_blank" rel="noopener">Github首页</a>，点击Sign up 进行注册。</h3><hr><h2 id="二：Github-Pages-静态网页建立"><a href="#二：Github-Pages-静态网页建立" class="headerlink" title="二：Github Pages 静态网页建立"></a>二：Github Pages 静态网页建立</h2><h3 id="1：在新页面点击-NEW-按钮，创建属于自己的新仓库。"><a href="#1：在新页面点击-NEW-按钮，创建属于自己的新仓库。" class="headerlink" title="1：在新页面点击 NEW 按钮，创建属于自己的新仓库。"></a>1：在新页面点击 <code>NEW</code> 按钮，创建属于自己的新仓库。</h3><p>  <img src="/2018/12/03/Hexo-Node-Git搭建博客/创建仓库.png" alt="创建仓库"></p><h3 id="2-点击-Code"><a href="#2-点击-Code" class="headerlink" title="2: 点击 Code"></a>2: 点击 <code>Code</code></h3><h3 id="3-点击-Create-new-file"><a href="#3-点击-Create-new-file" class="headerlink" title="3: 点击 Create new file"></a>3: 点击 <code>Create new file</code></h3><h3 id="4-输入-index-html，在-Edit-new-file-书写内容。"><a href="#4-输入-index-html，在-Edit-new-file-书写内容。" class="headerlink" title="4: 输入 index.html，在 Edit new file 书写内容。"></a>4: 输入 <code>index.html</code>，在 <code>Edit new file</code> 书写内容。</h3><h3 id="5：点击-Commit-new-file-进行创建。"><a href="#5：点击-Commit-new-file-进行创建。" class="headerlink" title="5：点击 Commit new file 进行创建。"></a>5：点击 <code>Commit new file</code> 进行创建。</h3><h3 id="6：用浏览器打开-用户名-github-io"><a href="#6：用浏览器打开-用户名-github-io" class="headerlink" title="6：用浏览器打开 用户名.github.io"></a>6：用浏览器打开 <code>用户名.github.io</code></h3><p>Github Pages 静态网页建立完成。</p><hr><h2 id="三：Hexo博客本地环境安装"><a href="#三：Hexo博客本地环境安装" class="headerlink" title="三：Hexo博客本地环境安装"></a>三：Hexo博客本地环境安装</h2><h3 id="1-安装-Node"><a href="#1-安装-Node" class="headerlink" title="1: 安装 Node"></a>1: 安装 <a href="http://nodejs.org/" target="_blank" rel="noopener">Node</a></h3><h3 id="2-安装-Git"><a href="#2-安装-Git" class="headerlink" title="2: 安装 Git"></a>2: 安装 <a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></h3><h3 id="4-初始化-Hexo"><a href="#4-初始化-Hexo" class="headerlink" title="4: 初始化 Hexo"></a>4: 初始化 Hexo</h3><ul><li><p>电脑中任选盘符新建一个文件夹作为博客网站的根目录，文件名好不要是中文。</p></li><li><p>空白处右键点击 <code>Git Bash Here</code></p></li></ul><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>等待运行完成后依次输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;新建文件夹的名称&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;新建文件夹的名称&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p><strong>注意:后续的命令均需要在站点目录下（即文件夹内）使用Git Bash运行。</strong></p><p>此时Hexo框架的本地搭建已经完成了。我们来运行一下看看：</p><p>命令行依次输入以下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean <span class="comment">#清除浏览器缓存</span></span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>浏览器中打开(<a href="http://locakhost:4000)或者(127.0.0.1:4000),说明Hexo博客已经成功在本地运行。" target="_blank" rel="noopener">http://locakhost:4000)或者(127.0.0.1:4000),说明Hexo博客已经成功在本地运行。</a></p><hr><h2 id="四：本地博客发布到Github-Pages"><a href="#四：本地博客发布到Github-Pages" class="headerlink" title="四：本地博客发布到Github Pages"></a>四：本地博客发布到Github Pages</h2><h3 id="1：需要在Github上创建好Github-Pages仓库"><a href="#1：需要在Github上创建好Github-Pages仓库" class="headerlink" title="1：需要在Github上创建好Github Pages仓库"></a>1：需要在Github上创建好Github Pages仓库</h3><h3 id="2：安装将-Hexo-部署到-Git-的插件"><a href="#2：安装将-Hexo-部署到-Git-的插件" class="headerlink" title="2：安装将 Hexo 部署到 Git 的插件"></a>2：安装将 Hexo 部署到 Git 的插件</h3><ul><li><p>在站点目录中运行命令行输入 <code>npm install hexo-deployer-git --save</code></p></li><li><p>后续还要安装各种插件，实现博客的各种功能。等待插件安装完成</p></li></ul><h3 id="3：将本地目录与Github关联起来"><a href="#3：将本地目录与Github关联起来" class="headerlink" title="3：将本地目录与Github关联起来"></a>3：将本地目录与Github关联起来</h3><ul><li>命令行输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"邮箱地址"</span></span><br></pre></td></tr></table></figure><ul><li><p>1： 这里要输入之前注册Github时的邮箱，例如我之前注册用的是 <a href="mailto:123@qq.com" target="_blank" rel="noopener">123@qq.com</a>，那命令行就输入ssh-keygen -t rsa -C “<a href="mailto:123@qq.com" target="_blank" rel="noopener">123@qq.com</a>“输入后一直回车。</p></li><li><p>2：打开 C:\Users\ 用户名，文件夹内寻找 .ssh 文件夹</p></li><li><p>3：文件夹内会有两个文件，一个id_rsa.pub一个id_rsa，用文本方式打开id_rsa.pub，推荐使用Vscode 打开，复制里面的的内容。</p></li><li><p>4：打开Github 点击右上角的头像 Settings 选择SSH and GPG keys</p></li><li><p>5：点击 <code>New SSH key</code> 将之前复制的内容粘帖到Key的框中。 上面的title 可以随意 点击 <code>Add SSH key</code> 完成添加。</p></li><li><p>6: 此时回到命令行。 试一下是否跟Github连接成功。命令行输入<code>ssh -T git@github.com</code>，弹出的内容输入yes，看到出现Hi <account name="">! You’ve successfully authenticated, but GitHub doesnot provide shell access. 说明链接成功。此处这个<account name="">应该是你Github的用户名。</account></account></p></li></ul><h3 id="4-修改Hexo站点的-config-yml文件"><a href="#4-修改Hexo站点的-config-yml文件" class="headerlink" title="4: 修改Hexo站点的 _config.yml文件"></a>4: 修改Hexo站点的 <code>_config.yml</code>文件</h3><ul><li>进入博客文件夹， 找到 <code>_config.yml</code> 博客的配置文件。以后修改博客的样式或内容会多次用到它。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title:  #网站标题</span><br><span class="line">subtitle: #网站副标题</span><br><span class="line">description: #网站描述 主要用于SEO</span><br><span class="line">keywords: #网站关键词 主要用于SEO</span><br><span class="line">author:  #网站作者</span><br><span class="line">language: zh-CN #网站语言</span><br><span class="line">timezone: #网站时区：Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># URL 网址</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url:  #修改为https://&lt;用户名&gt;.github.io</span><br><span class="line">root: / #如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span><br><span class="line">permalink: :year/:month/:day/:title/ #文章的永久链接格式</span><br><span class="line">permalink_defaults: #永久链接中各部分的默认值</span><br></pre></td></tr></table></figure><ul><li>在文件底部 deploy 添加如下代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy: #部署部分的设置</span><br><span class="line">type: git</span><br><span class="line">repo: git@github.com:&lt;Github用户名&gt;/&lt;github用户名&gt;.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h3 id="5-保存配置，将生成的本地页面上传至Github"><a href="#5-保存配置，将生成的本地页面上传至Github" class="headerlink" title="5: 保存配置，将生成的本地页面上传至Github"></a>5: 保存配置，将生成的本地页面上传至Github</h3><ul><li><p>命令行输入<code>hexo g</code>，此时Hexo会根据配置文件渲染出一套静态页面。</p></li><li><p>完成后输入<code>hexo d</code>，此时会将之前渲染出的一系列文件上传至Github。</p></li></ul><p><strong>注意：也可以直接输入<code>hexo g -d</code>直接完成渲染和上传。</strong></p><p>上传完成后，打开<strong>https://&lt;用户名&gt;.github.io</strong>查看上传的网页。如果页面变成了之前本地调试时的样子，说明上传以及完成了。没变的话查看一下上传时命令行窗口的信息有没有错误信息，没有的话清除一下浏览器缓存试试。</p><hr><h2 id="五：Hexo博客主题安装及Next主题个性化修改"><a href="#五：Hexo博客主题安装及Next主题个性化修改" class="headerlink" title="五：Hexo博客主题安装及Next主题个性化修改"></a>五：Hexo博客主题安装及Next主题个性化修改</h2><p><em>基于Next主题的修改和配置</em></p><p>注意：<strong>博客配置文件</strong>是指博客根目录下的<strong>_config.yml</strong>文件，<strong>主题配置文件</strong>是指<strong>/themes/主题名/路径下的_config.yml</strong>文件，例如我使用的主题为next主题，主题配置文件为_/themes/next/<em>config.yml</em>。</p><h3 id="1：主题选择"><a href="#1：主题选择" class="headerlink" title="1：主题选择"></a>1：主题选择</h3><ul><li>到 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">Nexo官网主题页</a>选择喜欢的主题。每个主题配置方法略有不同，建议使用流行主题，推荐Next主题，因为我的博客就是用Next主题搭建的。</li></ul><h3 id="2：主题修改"><a href="#2：主题修改" class="headerlink" title="2：主题修改"></a>2：主题修改</h3><h4 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h4><ul><li><p><a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Next主题文档页面</a></p></li><li><p><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">Nest主题Github页面</a></p></li><li><p>博客根目录打开命令行输入</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><ul><li>1：安装完成后，打开 博客配置文件 修改theme 主题：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions 扩展</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next #当前主题名称。值为false时禁用主题</span><br></pre></td></tr></table></figure><ul><li>2：修改 主题配置文件 是根目录/themes/next目录下的_config.yml文件。</li></ul><h4 id="修改菜单及创建分类页"><a href="#修改菜单及创建分类页" class="headerlink" title="修改菜单及创建分类页"></a>修改菜单及创建分类页</h4><ul><li><p>1:定位到 Hexo 站点目录下,在命令行输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p>新建出标签页</p><p>同样的道理，开启分类页的时候要输入<code>hexo new page categories</code>来新建出分类页。</p></li><li><p>2:设置页面类型：编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>3:修改 主题配置 文件下的menu项：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  #about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure><h4 id="修改主题风格"><a href="#修改主题风格" class="headerlink" title="修改主题风格"></a>修改主题风格</h4><ul><li>Next自带四种主题风格，可以在主题配置文件搜索Scheme项，将需要的风格前的#去掉，注意只能开启一个风格。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure><h4 id="设置作者头像"><a href="#设置作者头像" class="headerlink" title="设置作者头像"></a>设置作者头像</h4><ul><li><p>编辑主题配置文件，搜索修改字段 avatar， 值设置成头像的链接地址。可以设置成在线的图片地址。也可以把图片放在本地。</p></li><li><p>本地设置：放置在source/images目录下，设置为url: /images/avatar.jpg</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # in theme directory(source/images): /images/avatar.gif</span><br><span class="line">  # in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class="line">  # You can also use other linking images.</span><br><span class="line">  url: /images/cat.jpg</span><br><span class="line">  # If true, the avatar would be dispalyed in circle.</span><br><span class="line">  rounded: false</span><br><span class="line">  # The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.</span><br><span class="line">  opacity: 1</span><br><span class="line">  # If true, the avatar would be rotated with the cursor.</span><br><span class="line">  rotated: true</span><br></pre></td></tr></table></figure><h4 id="设置作者昵称与站点描述"><a href="#设置作者昵称与站点描述" class="headerlink" title="设置作者昵称与站点描述"></a>设置作者昵称与站点描述</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site 网站</span><br><span class="line">title: #网站标题</span><br><span class="line">subtitle: #网站副标题</span><br><span class="line">description: #网站描述 主要用于SEO</span><br><span class="line">keywords: #网站关键词 主要用于SEO</span><br><span class="line">author:  #网站作者</span><br><span class="line">language: zh-CN #网站语言</span><br><span class="line">timezone: #网站时区：Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</span><br></pre></td></tr></table></figure><h4 id="设置代码高亮主题"><a href="#设置代码高亮主题" class="headerlink" title="设置代码高亮主题"></a>设置代码高亮主题</h4><ul><li>NexT 使用 <a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="noopener">Tomorrow Theme</a> 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 normal，night， night blue， night bright， night eighties：</li></ul><p><img src="/2018/12/03/Hexo-Node-Git搭建博客/设置5种代码高亮主题.png" alt="Alt text"></p><ul><li>更改 highlight_theme 字段，将其值设定成你所喜爱的高亮主题，例如：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Code Highlight theme</span><br><span class="line"># Available values: normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">highlight_theme: night eighties</span><br></pre></td></tr></table></figure><h4 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h4><ul><li>侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件 中。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># Social Links.</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before `||` delimeter is the target permalink.</span><br><span class="line"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/yourname || github</span><br><span class="line">  E-Mail: mailto:yourname@qq.com || envelope</span><br><span class="line">  #Weibo: https://weibo.com/yourname || weibo</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br></pre></td></tr></table></figure><ul><li>设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键: <a href="https://www.lixint.me/www.fontawesome.com.cn" target="_blank" rel="noopener">Font Awesome</a> 图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀）。 enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: false</span><br></pre></td></tr></table></figure><h4 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h4><ul><li>越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要 主题配置文件 中填入 微信 和 支付宝 收款二维码图片地址 即可开启该功能。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Reward</span><br><span class="line"># If true, reward would be displayed in every article by default.</span><br><span class="line"># And you can show or hide one article specially through add page variable `reward: true/false`.</span><br><span class="line">reward:</span><br><span class="line">  enable: true</span><br><span class="line">  comment: 如果觉得文本对您有帮助，欢迎打赏</span><br><span class="line">  wechatpay: /images/wechat.png</span><br><span class="line">  alipay: /images/zhifubao.jpg</span><br><span class="line">  bitcoin: /images/qq.png</span><br></pre></td></tr></table></figure><p><strong>注意：将保存的图片放到 /source/images/图片名称</strong></p><h5 id="修改打赏字体不闪动"><a href="#修改打赏字体不闪动" class="headerlink" title="修改打赏字体不闪动"></a>修改打赏字体不闪动</h5><ul><li><p>鼠标一指就疯狂抖动。</p></li><li><p>修改文件next/source/css/_common/components/post/post-reward.styl，然后注释其中的函数#QR &gt; div:hover p函数即可。css文件注释用/ 和 / 包裹代码即可。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#QR &gt; div:hover p &#123;</span><br><span class="line">  animation: roll 0.1s infinite linear;</span><br><span class="line">  -webkit-animation: roll 0.1s infinite linear;</span><br><span class="line">  -moz-animation: roll 0.1s infinite linear;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这个post-reward.styl文件是跟按钮及图片相关的，如果需要修改关于打赏的其他属性，例如按钮大小，样式，图片大小等，都可以修改post-reward.styl文件实现。</li></ul><h4 id="开启友情链接-or-侧边栏推荐阅读"><a href="#开启友情链接-or-侧边栏推荐阅读" class="headerlink" title="开启友情链接 or 侧边栏推荐阅读"></a>开启友情链接 or 侧边栏推荐阅读</h4><ul><li><p>主题配置文件 中搜索links_title字段，修改links_icon、links_title、links_layout、links四个字段的内容实现自定义风格。</p></li><li><p>link_icon是title前面的图标，用法跟之前的社交链接的图标用法是一样的， 用Font Awesome图标。<br>links_title为标题，如果是作为友情链接使用，可以设置为<br>links_title: 友情链接<br>在links字段设置友情链接名字及链接</p></li><li><p>这个模块的自由度比较高，可以用来放置友情链接，也可以放置推荐阅读。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Blog rolls</span><br><span class="line">links_icon: link</span><br><span class="line">links_title: Links</span><br><span class="line">links_layout: block</span><br><span class="line">#links_layout: inline</span><br><span class="line">#links:</span><br><span class="line">  #Title: http://example.com</span><br></pre></td></tr></table></figure><h4 id="hexo生成博文插入图片显示不出来"><a href="#hexo生成博文插入图片显示不出来" class="headerlink" title="hexo生成博文插入图片显示不出来"></a>hexo生成博文插入图片显示不出来</h4><ol><li>把主页配置文件_config.yml 里的<code>post_asset_folder</code>:这个选项设置为true</li><li>在hexo的目录下执行<code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code>（需要等待一段时间）。</li><li>完成安装后用hexo新建文章 <code>hexo new &quot;文章标题&quot;</code>  的时候会发现_posts目录下面会多出一个和文章名字一样的文件夹。</li><li>只要使用<code>![logo](本地图片测试/logo.jpg)</code>就可以插入图片。其中[]里面不写文字则没有图片标题。</li></ol><h4 id="文章左侧的目录如何弄出来？"><a href="#文章左侧的目录如何弄出来？" class="headerlink" title="文章左侧的目录如何弄出来？"></a>文章左侧的目录如何弄出来？</h4><ol><li>1、首先在你的markdown文件里面要有标题，所谓标题就是例如这种一级标题(#)，二级标题(##)，三级标题(###)的。</li><li>2、在主题的_config文件里面，将toc的enable设置为true就ok了，默认的目录是有序号的，如果你不想要序号，你需要把number置为false 。</li></ol><h4 id="设置-RSS"><a href="#设置-RSS" class="headerlink" title="设置 RSS"></a>设置 RSS</h4><ol><li>NexT 中 RSS 有三个设置选项，满足特定的使用场景。 更改 主题配置 文件，设定 rss 字段的值：</li></ol><ul><li>false：禁用 RSS，不在页面上显示 RSS 连接。</li><li>留空：使用 Hexo 生成的 Feed 链接。 你可以需要先安装 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 插件。</li><li>安装方法：根目录下命令行输入<code>npm install hexo-generator-feed --save</code></li><li>具体的链接地址：适用于已经烧制过Feed的情形。<br>建议直接使用插件，比较省事。</li></ul><h4 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h4><ol><li>在<a href="http://www.easyicon.net/" target="_blank" rel="noopener">EasyIcon</a>中分别找一张（16 16与32 32）的ico图标,或者去别的网站下载或者制作，并将图标名称改为favicon16.ico与favicon32.ico。</li><li>把图标放在/themes/next/source/images或者放在根目录的/source/images文件夹里。</li><li>在 主题配置文件 内搜索favicon字段，把 small、medium字段的地址修改为/images/favicon16.ico 与 /images/favicon32.ico。</li></ol><h4 id="实现全站及文章字数统计及阅读时长"><a href="#实现全站及文章字数统计及阅读时长" class="headerlink" title="实现全站及文章字数统计及阅读时长"></a>实现全站及文章字数统计及阅读时长</h4><ol><li>根目录命令运行：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><ol start="2"><li>博客配置文件底部添加如下内容，保存。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 1，实现全站及文章数字统计及阅读时长</span><br><span class="line"># 运行 npm install hexo-symbols-count-time --save</span><br><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br></pre></td></tr></table></figure><h4 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h4><ol><li>根目录打开命令行，输入如下命令：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pace themes/next/source/lib/pace</span><br></pre></td></tr></table></figure><ol start="2"><li>然后主题配置文件搜索pace字段，修改pace: false为pace: true即可开启加载条功能，修改下方的pace-theme字段还可以修改加载条的样式。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># Progress bar in the top during page loading.</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-pace</span><br><span class="line">pace: true</span><br><span class="line"># Themes list:</span><br><span class="line">#pace-theme-big-counter</span><br><span class="line">#pace-theme-bounce</span><br><span class="line">#pace-theme-barber-shop</span><br><span class="line">#pace-theme-center-atom</span><br><span class="line">#pace-theme-center-circle</span><br><span class="line">#pace-theme-center-radar</span><br><span class="line">#pace-theme-center-simple</span><br><span class="line">#pace-theme-corner-indicator</span><br><span class="line">#pace-theme-fill-left</span><br><span class="line">#pace-theme-flash</span><br><span class="line">#pace-theme-loading-bar</span><br><span class="line">#pace-theme-mac-osx</span><br><span class="line">#pace-theme-minimal</span><br><span class="line"># For example</span><br><span class="line">pace_theme: pace-theme-center-simple</span><br><span class="line"># pace_theme: pace-theme-minimal</span><br></pre></td></tr></table></figure><h4 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h4><ol><li>打开themes/next/source/css/_custom/custom.styl,在里面写下如下代码:</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      cursor: url(&quot;http://om8u46rmb.bkt.clouddn.com/sword2.ico&quot;),auto!important</span><br><span class="line">  &#125;</span><br><span class="line">  :active &#123;</span><br><span class="line">      cursor: url(&quot;http://om8u46rmb.bkt.clouddn.com/sword1.ico&quot;),auto!important</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>在<a href="http://www.easyicon.net/" target="_blank" rel="noopener">EasyIcon</a>中找一张16 * 16的ico图，放在/source/images/中，修改上述代码中的链接为/images/xxx.ico，如果不放在本地的话，可以把图片放在图床，直接替换链接即可。</p></li><li><p>第一行的链接是默认状态下的鼠标样式，第二行的是鼠标按下时的样式。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      cursor: url(&quot;/images/cat.ico&quot;),auto!important</span><br><span class="line">  &#125;</span><br><span class="line">  :active &#123;</span><br><span class="line">      cursor: url(&quot;&quot;/images/cat2.ico&quot;&quot;),auto!important</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="实现点击出现桃心-以及-爆炸效果"><a href="#实现点击出现桃心-以及-爆炸效果" class="headerlink" title="实现点击出现桃心 以及 爆炸效果"></a>实现点击出现桃心 以及 爆炸效果</h4><ol><li>在/themes/next/source/js/src下新建文件love.js并填入如下代码：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><p>或建一个叫fireworks.js的文件并写入如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li>打开themes/next/layout/_layout.swig,在上面写下如下代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.fireworks &amp;&amp; not theme.love %&#125;</span><br><span class="line"> &lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; </span><br><span class="line"> &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line"> &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/fireworks.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if theme.love &amp;&amp; not theme.fireworks %&#125;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在 主题配置文件 最下方加入如下代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Fireworks and love</span><br><span class="line">fireworks: true</span><br><span class="line">love: false</span><br></pre></td></tr></table></figure><p><strong>注意：fireworks是爆炸效果，love是心形效果。两个不能同时开。</strong></p><h4 id="修改网页底部的小图标"><a href="#修改网页底部的小图标" class="headerlink" title="修改网页底部的小图标"></a>修改网页底部的小图标</h4><ol><li>在 主题配置文件 搜索footer字段，修改下方的icon字段下的name字段。name字段后的名字是 Font Awesome 图标的名字（不必带 fa- 前缀）。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup.</span><br><span class="line">  # If not defined, current year will be used.</span><br><span class="line">  #since: 2015</span><br><span class="line"></span><br><span class="line">  # Icon between year and copyright info.</span><br><span class="line">  icon:</span><br><span class="line">    # Icon name in fontawesome, see: https://fontawesome.com/v4.7.0/icons</span><br><span class="line">    # `heart` is recommended with animation in red (#ff0000).</span><br><span class="line">    name: user</span><br><span class="line">    # If you want to animate the icon, set it to true.</span><br><span class="line">    animated: true #animated自动为闪动开关，设置为true后图标会闪动。</span><br><span class="line">    # Change the color of icon, using Hex Code.</span><br><span class="line">    color: &quot;#808080&quot;</span><br></pre></td></tr></table></figure><h4 id="去掉页面底部的强力驱动信息及设置备案信息"><a href="#去掉页面底部的强力驱动信息及设置备案信息" class="headerlink" title="去掉页面底部的强力驱动信息及设置备案信息"></a>去掉页面底部的强力驱动信息及设置备案信息</h4><ul><li>主题配置文件搜索copyright字段，修改powered下的enable字段的true为false即可去掉强力驱动部分的内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># If not defined, will be used `author` from Hexo main config.</span><br><span class="line">  copyright:</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  powered:</span><br><span class="line">    # Hexo link (Powered by Hexo).</span><br><span class="line">    enable: true</span><br><span class="line">    # Version info of Hexo after Hexo link (vX.X.X).</span><br><span class="line">    version: true</span><br><span class="line"></span><br><span class="line">  theme:</span><br><span class="line">    # Theme &amp; scheme info link (Theme - NexT.scheme).</span><br><span class="line">    enable: true</span><br><span class="line">    # Version info of NexT after scheme info (vX.X.X).</span><br><span class="line">    version: true</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Beian icp information for Chinese users. In China, every legal website should have a beian icp in website footer.</span><br><span class="line">  # http://www.miitbeian.gov.cn</span><br><span class="line">  beian: #如果博客有备案的话，下方beian字段设置为true，icp后填写备案号。</span><br><span class="line">    enable: false</span><br><span class="line">    icp:</span><br></pre></td></tr></table></figure><h4 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h4><p><strong>注意：尽量不要添加，耗费资源较大，加载速度非常慢</strong></p><ul><li>1.根目录打开命令行，输入：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-canvas-nest themes/next/<span class="built_in">source</span>/lib/canvas-nest</span><br></pre></td></tr></table></figure><ul><li>2.主题配置文件搜索canvas-nest字段，enable项设置为true。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Canvas-nest</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span><br><span class="line">canvas_nest:</span><br><span class="line">  enable: false</span><br><span class="line">  onmobile: true # display on mobile or not</span><br><span class="line">  color: &apos;0,0,255&apos; # RGB values, use &apos;,&apos; to separate</span><br><span class="line">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class="line">  zIndex: -1 # z-index property of the background</span><br><span class="line">  count: 99 # the number of lines</span><br></pre></td></tr></table></figure><ul><li><p>3.其他配置项说明：</p></li><li><p>color ：线条颜色, 默认: ‘0,0,0’；三个数字分别为(R,G,B)</p></li><li>opacity: 线条透明度（0~1）, 默认: 0.5</li><li>count: 线条的总数量, 默认: 150</li><li>zIndex: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1</li><li>onmobile：是否在手机端显示。</li></ul><h5 id="增加波浪背景动画"><a href="#增加波浪背景动画" class="headerlink" title="增加波浪背景动画"></a>增加波浪背景动画</h5><ol><li>根目录打开命令行，输入:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-three themes/next/<span class="built_in">source</span>/lib/three</span><br></pre></td></tr></table></figure><ol start="2"><li>主题配置文件搜索three_waves字段，设置为true</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Internal version: 1.0.0</span><br><span class="line">  # See: https://github.com/theme-next/theme-next-three</span><br><span class="line">  # Example:</span><br><span class="line">  # three: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/three.min.js</span><br><span class="line">  # three_waves: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/three-waves.min.js</span><br><span class="line">  # canvas_lines: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/canvas_lines.min.js</span><br><span class="line">  # canvas_sphere: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/canvas_sphere.min.js</span><br><span class="line">  three:</span><br><span class="line">  three_waves:</span><br><span class="line">  canvas_lines:</span><br><span class="line">  canvas_sphere:</span><br></pre></td></tr></table></figure><p>three_waves、canvas_lines、canvas_sphere三个的效果各不相同，可以自己尝试一下选一个喜欢的。</p><h4 id="添加静态背景"><a href="#添加静态背景" class="headerlink" title="添加静态背景"></a>添加静态背景</h4><ul><li>打开<code>博客根目录/themes/next/source/css/_custom/custom.styl</code>文件，编辑如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">body &#123; </span><br><span class="line">    background-image: url(/images/background.png); //动图也可以添加</span><br><span class="line">    background-attachment: fixed; // 不随屏幕滚动而滚动</span><br><span class="line">    background-repeat: repeat; // 如果背景图不够屏幕大小则重复铺，改为no-repeat则表示不重复铺</span><br><span class="line">    background-size: contain; // 等比例铺满屏幕</span><br></pre></td></tr></table></figure><h4 id="博客主页自定义样式修改"><a href="#博客主页自定义样式修改" class="headerlink" title="博客主页自定义样式修改"></a>博客主页自定义样式修改</h4><blockquote><p>打开<code>博客根目录/themes/next/source/css/_custom/custom.styl</code>文件:</p><p>用 css 语言修改自己想要的主页样式就可以</p></blockquote><h4 id="在右上角实现fork-me-on-github按钮"><a href="#在右上角实现fork-me-on-github按钮" class="headerlink" title="在右上角实现fork me on github按钮"></a>在右上角实现fork me on github按钮</h4><ol><li>最新的Next主题已经内置了增加右上角的Fork me on github按钮功能，只需要在主题配置文件搜索github_banner字段，去掉前面的#，把||前面的github链接替换成自己的即可。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Follow me on GitHub banner in right-top corner.</span><br><span class="line"># Usage: `permalink || title`</span><br><span class="line"># Value before `||` delimeter is the target permalink.</span><br><span class="line"># Value after `||` delimeter is the title and aria-label name.</span><br><span class="line">github_banner: https://github.com/wudiufo || Follow me on GitHub</span><br></pre></td></tr></table></figure><p>||后的参数为按钮的title，为鼠标指在按钮上时显示的文本。</p><h4 id="增加回到顶部按钮及显示当前浏览进度"><a href="#增加回到顶部按钮及显示当前浏览进度" class="headerlink" title="增加回到顶部按钮及显示当前浏览进度"></a>增加回到顶部按钮及显示当前浏览进度</h4><ol><li>主题配置文件搜索b2t字段，将b2t字段的false修改为true即可，（注意此功能只能用于Pisces和Gemini主题）。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Back to top in sidebar (only for Pisces | Gemini).</span><br><span class="line">  b2t: true</span><br><span class="line"></span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  # scrollpercent字段设置为true即可实现当前浏览进度的显示。</span><br><span class="line">  scrollpercent: true</span><br><span class="line"></span><br><span class="line">  # Enable sidebar on narrow view (only for Muse | Mist).</span><br><span class="line">  onmobile: true</span><br></pre></td></tr></table></figure><h4 id="修改顶部菜单与下方信息栏的间隙大小"><a href="#修改顶部菜单与下方信息栏的间隙大小" class="headerlink" title="修改顶部菜单与下方信息栏的间隙大小"></a>修改顶部菜单与下方信息栏的间隙大小</h4><ol><li>主题配置文件搜索offset字段，将offset的像素数大小设置为需要的值，默认为12。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span><br><span class="line">  offset: 12</span><br></pre></td></tr></table></figure><h4 id="网站标题栏背景颜色"><a href="#网站标题栏背景颜色" class="headerlink" title="网站标题栏背景颜色"></a>网站标题栏背景颜色</h4><ol><li>打开 themes/next/source/css/_custom/custom.styl ,在里面写下如下代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 网站标题栏背景颜色</span><br><span class="line">.site-meta &#123;</span><br><span class="line">  background: #FF0033; //修改为自己喜欢的颜色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="为博客加上萌萌的动图"><a href="#为博客加上萌萌的动图" class="headerlink" title="为博客加上萌萌的动图"></a>为博客加上萌萌的动图</h4><ol><li>首先安装插件，根目录命令行输入：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><ol start="2"><li>主题配置文件最下方添加如下代码:</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># Live2D</span><br><span class="line">## https://github.com/xiazeyu/live2d-widget.js</span><br><span class="line">## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init</span><br><span class="line">live2d:</span><br><span class="line">  model:</span><br><span class="line">    scale: 1</span><br><span class="line">    hHeadPos: 0.5</span><br><span class="line">    vHeadPos: 0.618</span><br><span class="line">  display:</span><br><span class="line">    superSample: 2</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">    position: right</span><br><span class="line">    hOffset: 0</span><br><span class="line">    vOffset: -20</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br><span class="line">    scale: 0.5</span><br><span class="line">  react:</span><br><span class="line">    opacityDefault: 0.7</span><br><span class="line">    opacityOnHover: 0.2</span><br></pre></td></tr></table></figure><p>更多设置可以查看<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">官方文档</a></p><h4 id="添加DaoVoice-实现在线联系"><a href="#添加DaoVoice-实现在线联系" class="headerlink" title="添加DaoVoice 实现在线联系"></a>添加DaoVoice 实现在线联系</h4><ol><li>本功能可以实现在线留言，作者会收到邮件，如果绑定了微信，作者还会收到微信通知。</li><li>首先到<a href="http://dashboard.daovoice.io/get-started?invite_code=e25c1e73" target="_blank" rel="noopener">DaoVoice</a>注册一个Daovioce账号。</li><li>注册完成后会进到DaoCloud，重新访问连接即可。进到Daovoice面板，点击左侧边栏的应用设置– 安装到网站。在下方的代码中会看到app_id: “xxxx”字样。</li><li>打开 themes/next/layout/_partials/head/head.swig 文件中最下方加入如下代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.daovoice %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/0f81ff2f.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">  daovoice(&apos;init&apos;, &#123;</span><br><span class="line">      app_id: &quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">  daovoice(&apos;update&apos;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>在主题配置文件 _config.yml，添加如下代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># DaoVoice </span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id: 这里输入前面获取的app_id</span><br></pre></td></tr></table></figure><ol start="6"><li><p>回到Daovoice控制面板，点击聊天设置可以对聊天图标的颜色及位置进行设置。</p></li><li><p>最后到右上角选择管理员，微信绑定，可以绑定你的微信号。这样收到消息后可以通过小程序进行回复。</p></li></ol><h4 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h4><ol><li>打开\themes\next\source\css_custom\custom.styl,加入如下代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>可以自行修改代码来修改阴影效果</li></ol><h4 id="增加本地搜索功能"><a href="#增加本地搜索功能" class="headerlink" title="增加本地搜索功能"></a>增加本地搜索功能</h4><ol><li>首先安装插件，根目录命令行输入:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><ol start="2"><li>编辑博客配置文件，新增以下内容到任意位置：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><ol start="3"><li>主题配置文件搜索local_search字段，设置enable为true</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h4 id="添加图片懒加载"><a href="#添加图片懒加载" class="headerlink" title="添加图片懒加载"></a>添加图片懒加载</h4><ul><li>博客根目录打开命令输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-jquery-lazyload themes/next/<span class="built_in">source</span>/lib/jquery_lazyload</span><br></pre></td></tr></table></figure><ul><li>然后在配置文件中搜索 lazyload,将其修改为true<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Added switch option for separated repo in 6.0.0.</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-jquery-lazyload</span><br><span class="line">lazyload: true</span><br></pre></td></tr></table></figure></li></ul><h4 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h4><h5 id="添加方法"><a href="#添加方法" class="headerlink" title="添加方法"></a>添加方法</h5><ol><li>在<a href="https://livere.com/" target="_blank" rel="noopener">来必力</a>的官网上注册账号。</li><li>在<a href="https://livere.com/insight/myCode" target="_blank" rel="noopener">此处</a>获取data-uid。</li><li>打开NexT主题的配置文件—config中，搜索livere_uid，将livere_uid前面的#号去掉，将id填写到livere_uid：后面。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Support for LiveRe comments system.</span><br><span class="line"># You can get your uid from https://livere.com/insight/myCode (General web site)</span><br><span class="line">#livere_uid: your uid</span><br></pre></td></tr></table></figure><h4 id="代码块复制功能"><a href="#代码块复制功能" class="headerlink" title="代码块复制功能"></a>代码块复制功能</h4><h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><p>为了提高博客代码块的用户体验，仅仅代码高亮还不行，最好还能一键复制代码。故此文将讲述Hexo Next主题博客的代码块复制功能配置。</p><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><p>需要下载 <a href="https://clipboardjs.com/" target="_blank" rel="noopener">clipboard.js</a></p><ul><li><a href="https://clipboardjs.com/" target="_blank" rel="noopener">主页</a></li><li><a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener">Github</a></li></ul><p>提供下载:（推荐用这个）</p><ul><li><a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.js" target="_blank" rel="noopener">clipboard.min.js</a></li></ul><ol><li>将下载的文件存到如下目录：（相对目录为工程目录，没有目录则创建）</li></ol><blockquote><p>.\themes\next\source\lib\zclip\clipboard.min.js</p></blockquote><h5 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h5><ol start="2"><li>新建文件 <code>custom.js</code>，目录如下：（相对目录为工程目录）</li></ol><blockquote><p>\themes\next\source\js\src\custom.js</p></blockquote><p>修改 <code>custom.js</code>为如下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//此函数用于创建复制按钮</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCopyBtns</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $codeArea = $(<span class="string">"figure table"</span>);</span><br><span class="line">    <span class="comment">//查看页面是否具有代码区域，没有代码块则不创建 复制按钮</span></span><br><span class="line">    <span class="keyword">if</span> ($codeArea.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//复制成功后将要干的事情</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">changeToSuccess</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">             $imgOK = $(<span class="string">"#copyBtn"</span>).find(<span class="string">"#imgSuccess"</span>);</span><br><span class="line">                <span class="keyword">if</span> ($imgOK.css(<span class="string">"display"</span>) == <span class="string">"none"</span>) &#123;</span><br><span class="line">                    $imgOK.css(&#123;</span><br><span class="line">                        opacity: <span class="number">0</span>,</span><br><span class="line">                        display: <span class="string">"block"</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                    $imgOK.animate(&#123;</span><br><span class="line">                        opacity: <span class="number">1</span></span><br><span class="line">                    &#125;, <span class="number">1000</span>);</span><br><span class="line">                    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                        $imgOK.animate(&#123;</span><br><span class="line">                            opacity: <span class="number">0</span></span><br><span class="line">                        &#125;, <span class="number">2000</span>);</span><br><span class="line">                    &#125;, <span class="number">2000</span>);</span><br><span class="line">                    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                        $imgOK.css(<span class="string">"display"</span>, <span class="string">"none"</span>);</span><br><span class="line">                    &#125;, <span class="number">4000</span>);</span><br><span class="line">                &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">//创建 全局复制按钮，仅有一组。包含：复制按钮，复制成功响应按钮</span></span><br><span class="line">        <span class="comment">//值得注意的是：1.按钮默认隐藏，2.位置使用绝对位置 position: absolute; (position: fixed 也可以，需要修改代码)</span></span><br><span class="line">        $(<span class="string">".post-body"</span>).before(<span class="string">'&lt;div id="copyBtn" style="opacity: 0; position: absolute;top:0px;display: none;line-height: 1; font-size:1.5em"&gt;&lt;span id="imgCopy" &gt;&lt;i class="fa fa-paste fa-fw"&gt;&lt;/i&gt;&lt;/span&gt;&lt;span id="imgSuccess" style="display: none;"&gt;&lt;i class="fa fa-check-circle fa-fw" aria-hidden="true"&gt;&lt;/i&gt;&lt;/span&gt;'</span>);</span><br><span class="line">        <span class="comment">//创建 复制 插件，绑定单机时间到 指定元素，支持JQuery</span></span><br><span class="line">        <span class="keyword">var</span> clipboard = <span class="keyword">new</span> Clipboard(<span class="string">'#copyBtn'</span>, &#123;</span><br><span class="line">            target: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//返回需要复制的元素内容</span></span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(<span class="string">"[copyFlag]"</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            isSupported: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//支持复制内容</span></span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(<span class="string">"[copyFlag]"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//复制成功事件绑定</span></span><br><span class="line">        clipboard.on(<span class="string">'success'</span>,</span><br><span class="line">            <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="comment">//清除内容被选择状态</span></span><br><span class="line">                e.clearSelection();</span><br><span class="line">                changeToSuccess(e);</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="comment">//复制失败绑定事件</span></span><br><span class="line">        clipboard.on(<span class="string">'error'</span>,</span><br><span class="line">            <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.error(<span class="string">'Action:'</span>, e.action);</span><br><span class="line">                <span class="built_in">console</span>.error(<span class="string">'Trigger:'</span>, e.trigger);</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="comment">//鼠标 在复制按钮上滑动和离开后渐变显示/隐藏效果</span></span><br><span class="line">        $(<span class="string">"#copyBtn"</span>).hover(</span><br><span class="line">            <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).stop();</span><br><span class="line">                $(<span class="keyword">this</span>).css(<span class="string">"opacity"</span>, <span class="number">1</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).animate(&#123;</span><br><span class="line">                    opacity: <span class="number">0</span></span><br><span class="line">                &#125;, <span class="number">2000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//感应鼠标是否在代码区</span></span><br><span class="line">$(<span class="string">"figure"</span>).hover(</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//-------鼠标活动在代码块内</span></span><br><span class="line">        <span class="comment">//移除之前含有复制标志代码块的 copyFlag</span></span><br><span class="line">        $(<span class="string">"[copyFlag]"</span>).removeAttr(<span class="string">"copyFlag"</span>);</span><br><span class="line">        <span class="comment">//在新的（当前鼠标所在代码区）代码块插入标志：copyFlag</span></span><br><span class="line">        $(<span class="keyword">this</span>).find(<span class="string">".code"</span>).attr(<span class="string">"copyFlag"</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//获取复制按钮</span></span><br><span class="line">        $copyBtn = $(<span class="string">"#copyBtn"</span>);</span><br><span class="line">        <span class="keyword">if</span> ($copyBtn.lenght != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//获取到按钮的前提下进行一下操作</span></span><br><span class="line">            <span class="comment">//停止按钮动画效果</span></span><br><span class="line">            <span class="comment">//设置为 显示状态</span></span><br><span class="line">            <span class="comment">//修改 复制按钮 位置到 当前代码块开始部位</span></span><br><span class="line">            <span class="comment">//设置代码块 左侧位置</span></span><br><span class="line">            $copyBtn.stop();</span><br><span class="line">            $copyBtn.css(<span class="string">"opacity"</span>, <span class="number">0.8</span>);</span><br><span class="line">            $copyBtn.css(<span class="string">"display"</span>, <span class="string">"block"</span>);</span><br><span class="line">            $copyBtn.css(<span class="string">"top"</span>, <span class="built_in">parseInt</span>($copyBtn.css(<span class="string">"top"</span>)) + $(<span class="keyword">this</span>).offset().top - $copyBtn.offset().top + <span class="number">3</span>);</span><br><span class="line">            $copyBtn.css(<span class="string">"left"</span>, -$copyBtn.width() - <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//-------鼠标离开代码块</span></span><br><span class="line">        <span class="comment">//设置复制按钮可见度 2秒内到 0</span></span><br><span class="line">        $(<span class="string">"#copyBtn"</span>).animate(&#123;</span><br><span class="line">            opacity: <span class="number">0</span></span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">//页面载入完成后，创建复制按钮</span></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  createCopyBtns();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><ol start="3"><li>新建文件 <code>custom.swig</code> ，目录：.\themes\next\layout_custom\custom.swig（相对目录为工程目录）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/lib/zclip/clipboard.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/custom.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>修改文件 <code>_layout.swig</code> ，目录：<code>\themes\next\layout\_layout.swig</code>（相对目录为工程目录）</li></ol><p>添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line"></span><br><span class="line">    &#123;% include &apos;_third-party/math/mathjax.swig&apos; %&#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    &#123;% include &apos;_custom/custom.swig&apos; %&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>向文件中 <code>&lt;/body&gt;</code> 前一行插入文件引用，如第 15 行效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &apos;_custom/custom.swig&apos; %&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li><p>在主题配置文件<code>_config.yml</code>中找到以下代码：</p><p>将enable修改为true，show_result修改为true</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  # Manual define the border radius in codeblock</span><br><span class="line">  # Leave it empty for the default 1</span><br><span class="line">  border_radius:</span><br><span class="line">  # Add copy button on codeblock</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true</span><br><span class="line">    # Show text copy result</span><br><span class="line">    show_result: true</span><br></pre></td></tr></table></figure><h2 id="六：Hexo撰写文章"><a href="#六：Hexo撰写文章" class="headerlink" title="六：Hexo撰写文章"></a>六：Hexo撰写文章</h2><h3 id="一、创建文章"><a href="#一、创建文章" class="headerlink" title="一、创建文章"></a>一、创建文章</h3><ol><li>在站点文件夹中打开git bash，输入如下命令创建文章，其中title为文章的标题：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"title"</span></span><br></pre></td></tr></table></figure><ul><li>此时就会在source/_post文件夹中创建了一个文件，命名为：title.md，而这个文件就是将要发布到网站上的原始文件，记录文章内容，以下我们将要在这个文件中写下我们的第一篇博客</li></ul><h3 id="二、编写文章（基于Markdown）"><a href="#二、编写文章（基于Markdown）" class="headerlink" title="二、编写文章（基于Markdown）"></a>二、编写文章（基于Markdown）</h3><ol><li><p>推荐大家一款简洁易用的markdown编辑器 <a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a>,点击下载。</p></li><li><p><a href="https://maxiang.io/" target="_blank" rel="noopener">Markdown语法及在线编辑</a></p></li></ol><h4 id="1-模板设置"><a href="#1-模板设置" class="headerlink" title="1.模板设置"></a>1.模板设置</h4><ul><li>当我们使用命令 hexo new “title” 去创建我们的文章时，Hexo会根据/scaffolds/post.md文件对新建文件进行初始化，换言之，/scaffolds/post.md文件就是创建新文章的模板，所以我们可以修改它来适应自己的写作习惯，一个简单的示例如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="2-头部设置"><a href="#2-头部设置" class="headerlink" title="2.头部设置"></a>2.头部设置</h4><ul><li>在博客文章的开头会有对文章的说明文字，叫做文章头部，文章的头部除了可以设置文章标题、书写日期等基础信息外，还可以对文章添加标签、分类等，一个简单的示例如下:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Title #标题</span><br><span class="line">date: YYYY-MM-DD HH:MM:SS #文件建立日期</span><br><span class="line">tags: #标签（不适用于分页）</span><br><span class="line">- 标签1</span><br><span class="line">- 标签2</span><br><span class="line">categories: #分类（不适用于分页）</span><br><span class="line">- 分类1</span><br><span class="line">- 分类2</span><br><span class="line">layout: #布局</span><br><span class="line">updated: YYYY-MM-DD HH:MM:SS #文件更新日期</span><br><span class="line">comments：true #开启文章的评论功能</span><br><span class="line">permalink：覆盖文章网址</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><strong>注意，属性和属性值之间必须有一个空格，否则会解析错误</strong></p><h4 id="3-首页显示"><a href="#3-首页显示" class="headerlink" title="3.首页显示"></a>3.首页显示</h4><ul><li><p>1.在Hexo框架博客的首页会显示文章的内容（默认显示文章的全部内容），如果当文章太长的时候就会显得十分冗余，所以我们有必要对其进行精简，只需在文章中使用 <code>&lt;!--more--&gt;</code>标志，表示只会显示标志前面的内容</p></li><li><p>2.推荐使用：</p><p>在主题配置文件中找到<code>auto_excerpt</code>，将enable变为true，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150 #长度可自由调节</span><br></pre></td></tr></table></figure></li></ul><h3 id="三，顶部统计每篇文章阅读次数"><a href="#三，顶部统计每篇文章阅读次数" class="headerlink" title="三，顶部统计每篇文章阅读次数"></a>三，顶部统计每篇文章阅读次数</h3><p>在主题配置文件中查找<code>busuanzi_count</code>,将其按照如下方式修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Show Views/Visitors of the website/page with busuanzi.</span><br><span class="line"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: eye</span><br></pre></td></tr></table></figure><h2 id="七，生成sitemap站点地图"><a href="#七，生成sitemap站点地图" class="headerlink" title="七，生成sitemap站点地图"></a>七，生成sitemap站点地图</h2><p><strong>百度+谷歌都无法搜索到我的博客 不能忍</strong></p><h3 id="1-先确认博客是否被收录"><a href="#1-先确认博客是否被收录" class="headerlink" title="1.先确认博客是否被收录"></a>1.先确认博客是否被收录</h3><ul><li><p>在百度或者谷歌上面输入下面格式来判断，如果能搜索到就说明被收录，否则就没有。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:写你要搜索的域名 # site:wudiufo.github.io</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-创建站点地图文件"><a href="#2-创建站点地图文件" class="headerlink" title="2.创建站点地图文件"></a>2.创建站点地图文件</h3><blockquote><p>站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站。</p></blockquote><ul><li>先安装一下，打开你的hexo博客根目录，分别用下面两个命令来安装针对谷歌和百度的插件:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><ul><li><p>在博客根目录的_config.yml中添加如下代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure><ul><li><p>执行以下命令，编译你的博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure></li><li><p>在你的博客根目录的public下面发现生成了sitemap.xml以及baidusitemap.xml就表示成功了</p></li><li>执行 <code>hexo s</code> 看站点地图是否生成</li></ul></li></ul><h3 id="3-让百度-360和谷歌收录我们的博客"><a href="#3-让百度-360和谷歌收录我们的博客" class="headerlink" title="3.让百度,360和谷歌收录我们的博客"></a>3.让百度,360和谷歌收录我们的博客</h3><h4 id="验证网站"><a href="#验证网站" class="headerlink" title="验证网站"></a>验证网站</h4><p>在百度和360，谷歌上分别搜索：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:写你要搜索的域名 # site:wudiufo.github.io</span><br></pre></td></tr></table></figure><ul><li>其中的域名换成你的博客域名，如果此前没有进行过操作，应该是搜不到的，并且搜索出来的结果含有搜索引擎提交入口</li><li><p>分别进入搜索引擎提交入口，添加域名，选择验证网站，有3种验证方式，本文推荐采用HTML标签验证</p></li><li><p>这里演示<a href="https://link.jianshu.com/?t=http://zhanzhang.baidu.com/dashboard/index" target="_blank" rel="noopener">百度站长平台</a>  </p></li></ul><p>打开Hexo主题配置文件，添加以下两行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">google_site_verification: #索引擎提供给你的HTML标签的content后的字符串</span><br><span class="line">baidu-site-verification: #索引擎提供给你的HTML标签content后的字符串</span><br></pre></td></tr></table></figure><p>还有其他搜索引擎，自行添加</p><p>然后运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>然后点击验证，就可以通过验证了</p><h3 id="4，百度自动推送"><a href="#4，百度自动推送" class="headerlink" title="4，百度自动推送"></a>4，百度自动推送</h3><ul><li><p>将<code>主题配置文件</code>中的<code>baidu_push</code>设置为<code>true</code>，然后将<code>/next/layout/_scripts</code>文件夹下面的<code>baidu-push.swig</code>文件中的 `</p><script type="text/javascript" async src="//push.zhanzhang.baidu.com/push.js"></script><p>` 替换为百度提供的自动推送代码,如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</span><br><span class="line">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span><br><span class="line">    s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="5-谷歌收录我们的博客"><a href="#5-谷歌收录我们的博客" class="headerlink" title="5.谷歌收录我们的博客"></a>5.谷歌收录我们的博客</h3><p>谷歌操作比较简单，就是向<a href="https://link.jianshu.com/?t=https://www.google.com/webmasters/tools" target="_blank" rel="noopener">Google站长工具</a>提交sitemap<br>登录Google账号，添加了站点验证通过后，选择站点，之后在<strong>抓取</strong>——<strong>站点地图</strong>——<strong>添加/测试站点地图</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从零开始搭建博客第一部分，Github注册及Github Pages建立&lt;/p&gt;
&lt;h2 id=&quot;什么是-Hexo？&quot;&gt;&lt;a href=&quot;#什么是-Hexo？&quot; class=&quot;headerlink&quot; title=&quot;什么是 Hexo？&quot;&gt;&lt;/a&gt;什么是 Hexo？&lt;/h2&gt;&lt;h3 id=&quot;Hexo-是一个快速、简洁且高效的博客框架。Hexo-使用-Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&quot;&gt;&lt;a href=&quot;#Hexo-是一个快速、简洁且高效的博客框架。Hexo-使用-Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&quot; class=&quot;headerlink&quot; title=&quot;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/#什么是-Hexo？&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; 是一个快速、简洁且高效的博客框架。Hexo 使用 &lt;a href=&quot;https://maxiang.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Markdown&lt;/a&gt;（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/h3&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://wudiufo.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo+Node+Git搭建博客" scheme="http://wudiufo.github.io/tags/Hexo-Node-Git%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wudiufo.github.io/2018/12/02/hello-world/"/>
    <id>http://wudiufo.github.io/2018/12/02/hello-world/</id>
    <published>2018-12-02T14:47:52.248Z</published>
    <updated>2018-12-02T14:47:52.249Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
