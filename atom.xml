<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Haiyang</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wudiufo.github.io/"/>
  <updated>2018-12-03T17:58:07.948Z</updated>
  <id>http://wudiufo.github.io/</id>
  
  <author>
    <name>Haiyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo+Node+Git搭建博客</title>
    <link href="http://wudiufo.github.io/2018/12/03/Hexo-Node-Git%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://wudiufo.github.io/2018/12/03/Hexo-Node-Git搭建博客/</id>
    <published>2018-12-03T12:40:38.000Z</published>
    <updated>2018-12-03T17:58:07.948Z</updated>
    
    <content type="html"><![CDATA[<p>从零开始搭建博客第一部分，Github注册及Github Pages建立</p><h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><h3 id="Hexo-是一个快速、简洁且高效的博客框架。Hexo-使用-Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。"><a href="#Hexo-是一个快速、简洁且高效的博客框架。Hexo-使用-Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。" class="headerlink" title="Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。"></a><a href="https://hexo.io/zh-cn/docs/#什么是-Hexo？" target="_blank" rel="noopener">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="https://maxiang.io/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</h3><h2 id="一：注册Github"><a href="#一：注册Github" class="headerlink" title="一：注册Github"></a>一：注册Github</h2><h3 id="1：打开Github首页，点击Sign-up-进行注册。"><a href="#1：打开Github首页，点击Sign-up-进行注册。" class="headerlink" title="1：打开Github首页，点击Sign up 进行注册。"></a>1：打开<a href="https://github.com/" target="_blank" rel="noopener">Github首页</a>，点击Sign up 进行注册。</h3><hr><h2 id="二：Github-Pages-静态网页建立"><a href="#二：Github-Pages-静态网页建立" class="headerlink" title="二：Github Pages 静态网页建立"></a>二：Github Pages 静态网页建立</h2><h3 id="1：在新页面点击-NEW-按钮，创建属于自己的新仓库。"><a href="#1：在新页面点击-NEW-按钮，创建属于自己的新仓库。" class="headerlink" title="1：在新页面点击 NEW 按钮，创建属于自己的新仓库。"></a>1：在新页面点击 <code>NEW</code> 按钮，创建属于自己的新仓库。</h3><p>  <img src="./images/创建仓库.png" alt="创建仓库"></p><h3 id="2-点击-Code"><a href="#2-点击-Code" class="headerlink" title="2: 点击 Code"></a>2: 点击 <code>Code</code></h3><h3 id="3-点击-Create-new-file"><a href="#3-点击-Create-new-file" class="headerlink" title="3: 点击 Create new file"></a>3: 点击 <code>Create new file</code></h3><h3 id="4-输入-index-html，在-Edit-new-file-书写内容。"><a href="#4-输入-index-html，在-Edit-new-file-书写内容。" class="headerlink" title="4: 输入 index.html，在 Edit new file 书写内容。"></a>4: 输入 <code>index.html</code>，在 <code>Edit new file</code> 书写内容。</h3><h3 id="5：点击-Commit-new-file-进行创建。"><a href="#5：点击-Commit-new-file-进行创建。" class="headerlink" title="5：点击 Commit new file 进行创建。"></a>5：点击 <code>Commit new file</code> 进行创建。</h3><h3 id="6：用浏览器打开-用户名-github-io"><a href="#6：用浏览器打开-用户名-github-io" class="headerlink" title="6：用浏览器打开 用户名.github.io"></a>6：用浏览器打开 <code>用户名.github.io</code></h3><p>Github Pages 静态网页建立完成。</p><hr><h2 id="三：Hexo博客本地环境安装"><a href="#三：Hexo博客本地环境安装" class="headerlink" title="三：Hexo博客本地环境安装"></a>三：Hexo博客本地环境安装</h2><h3 id="1-安装-Node"><a href="#1-安装-Node" class="headerlink" title="1: 安装 Node"></a>1: 安装 <a href="http://nodejs.org/" target="_blank" rel="noopener">Node</a></h3><h3 id="2-安装-Git"><a href="#2-安装-Git" class="headerlink" title="2: 安装 Git"></a>2: 安装 <a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></h3><h3 id="4-初始化-Hexo"><a href="#4-初始化-Hexo" class="headerlink" title="4: 初始化 Hexo"></a>4: 初始化 Hexo</h3><ul><li><p>电脑中任选盘符新建一个文件夹作为博客网站的根目录，文件名好不要是中文。</p></li><li><p>空白处右键点击 <code>Git Bash Here</code></p></li></ul><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>等待运行完成后依次输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;新建文件夹的名称&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;新建文件夹的名称&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p><strong>注意:后续的命令均需要在站点目录下（即文件夹内）使用Git Bash运行。</strong></p><p>此时Hexo框架的本地搭建已经完成了。我们来运行一下看看：</p><p>命令行依次输入以下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>浏览器中打开(<a href="http://locakhost:4000)或者(127.0.0.1:4000),说明Hexo博客已经成功在本地运行。" target="_blank" rel="noopener">http://locakhost:4000)或者(127.0.0.1:4000),说明Hexo博客已经成功在本地运行。</a></p><hr><h2 id="四：本地博客发布到Github-Pages"><a href="#四：本地博客发布到Github-Pages" class="headerlink" title="四：本地博客发布到Github Pages"></a>四：本地博客发布到Github Pages</h2><h3 id="1：需要在Github上创建好Github-Pages仓库"><a href="#1：需要在Github上创建好Github-Pages仓库" class="headerlink" title="1：需要在Github上创建好Github Pages仓库"></a>1：需要在Github上创建好Github Pages仓库</h3><h3 id="2：安装将-Hexo-部署到-Git-的插件"><a href="#2：安装将-Hexo-部署到-Git-的插件" class="headerlink" title="2：安装将 Hexo 部署到 Git 的插件"></a>2：安装将 Hexo 部署到 Git 的插件</h3><ul><li><p>在站点目录中运行命令行输入 <code>npm install hexo-deployer-git --save</code></p></li><li><p>后续还要安装各种插件，实现博客的各种功能。等待插件安装完成</p></li></ul><h3 id="3：将本地目录与Github关联起来"><a href="#3：将本地目录与Github关联起来" class="headerlink" title="3：将本地目录与Github关联起来"></a>3：将本地目录与Github关联起来</h3><ul><li>命令行输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"邮箱地址"</span></span><br></pre></td></tr></table></figure><ul><li><p>1： 这里要输入之前注册Github时的邮箱，例如我之前注册用的是 <a href="mailto:123@qq.com" target="_blank" rel="noopener">123@qq.com</a>，那命令行就输入ssh-keygen -t rsa -C “<a href="mailto:123@qq.com" target="_blank" rel="noopener">123@qq.com</a>“输入后一直回车。</p></li><li><p>2：打开 C:\Users\ 用户名，文件夹内寻找 .ssh 文件夹</p></li><li><p>3：文件夹内会有两个文件，一个id_rsa.pub一个id_rsa，用文本方式打开id_rsa.pub，推荐使用Vscode 打开，复制里面的的内容。</p></li><li><p>4：打开Github 点击右上角的头像 Settings 选择SSH and GPG keys</p></li><li><p>5：点击 <code>New SSH key</code> 将之前复制的内容粘帖到Key的框中。 上面的title 可以随意 点击 <code>Add SSH key</code> 完成添加。</p></li><li><p>6: 此时回到命令行。 试一下是否跟Github连接成功。命令行输入<code>ssh -T git@github.com</code>，弹出的内容输入yes，看到出现Hi <account name="">! You’ve successfully authenticated, but GitHub doesnot provide shell access. 说明链接成功。此处这个<account name="">应该是你Github的用户名。</account></account></p></li></ul><h3 id="4-修改Hexo站点的-config-yml文件"><a href="#4-修改Hexo站点的-config-yml文件" class="headerlink" title="4: 修改Hexo站点的 _config.yml文件"></a>4: 修改Hexo站点的 <code>_config.yml</code>文件</h3><ul><li>进入博客文件夹， 找到 <code>_config.yml</code> 博客的配置文件。以后修改博客的样式或内容会多次用到它。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title:  #网站标题</span><br><span class="line">subtitle: #网站副标题</span><br><span class="line">description: #网站描述 主要用于SEO</span><br><span class="line">keywords: #网站关键词 主要用于SEO</span><br><span class="line">author:  #网站作者</span><br><span class="line">language: zh-CN #网站语言</span><br><span class="line">timezone: #网站时区：Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># URL 网址</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url:  #修改为https://&lt;用户名&gt;.github.io</span><br><span class="line">root: / #如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span><br><span class="line">permalink: :year/:month/:day/:title/ #文章的永久链接格式</span><br><span class="line">permalink_defaults: #永久链接中各部分的默认值</span><br></pre></td></tr></table></figure><ul><li>在文件底部 deploy 添加如下代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy: #部署部分的设置</span><br><span class="line">type: git</span><br><span class="line">repo: git@github.com:&lt;Github用户名&gt;/&lt;github用户名&gt;.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h3 id="5-保存配置，将生成的本地页面上传至Github"><a href="#5-保存配置，将生成的本地页面上传至Github" class="headerlink" title="5: 保存配置，将生成的本地页面上传至Github"></a>5: 保存配置，将生成的本地页面上传至Github</h3><ul><li><p>命令行输入<code>hexo g</code>，此时Hexo会根据配置文件渲染出一套静态页面。</p></li><li><p>完成后输入<code>hexo d</code>，此时会将之前渲染出的一系列文件上传至Github。</p></li></ul><p><strong>注意：也可以直接输入<code>hexo g -d</code>直接完成渲染和上传。</strong></p><p>上传完成后，打开<strong>https://&lt;用户名&gt;.github.io</strong>查看上传的网页。如果页面变成了之前本地调试时的样子，说明上传以及完成了。没变的话查看一下上传时命令行窗口的信息有没有错误信息，没有的话清除一下浏览器缓存试试。</p><hr><h2 id="五：Hexo博客主题安装及Next主题个性化修改"><a href="#五：Hexo博客主题安装及Next主题个性化修改" class="headerlink" title="五：Hexo博客主题安装及Next主题个性化修改"></a>五：Hexo博客主题安装及Next主题个性化修改</h2><p><em>基于Next主题的修改和配置</em></p><p>注意：<strong>博客配置文件</strong>是指博客根目录下的<strong>_config.yml</strong>文件，<strong>主题配置文件</strong>是指<strong>/themes/主题名/路径下的_config.yml</strong>文件，例如我使用的主题为next主题，主题配置文件为_/themes/next/<em>config.yml</em>。</p><h3 id="1：主题选择"><a href="#1：主题选择" class="headerlink" title="1：主题选择"></a>1：主题选择</h3><ul><li>到 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">Nexo官网主题页</a>选择喜欢的主题。每个主题配置方法略有不同，建议使用流行主题，推荐Next主题，因为我的博客就是用Next主题搭建的。</li></ul><h3 id="2：主题修改"><a href="#2：主题修改" class="headerlink" title="2：主题修改"></a>2：主题修改</h3><h4 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h4><ul><li><p><a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Next主题文档页面</a></p></li><li><p><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">Nest主题Github页面</a></p></li><li><p>博客根目录打开命令行输入</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><ul><li>1：安装完成后，打开 博客配置文件 修改theme 主题：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions 扩展</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next #当前主题名称。值为false时禁用主题</span><br></pre></td></tr></table></figure><ul><li>2：修改 主题配置文件 是根目录/themes/next目录下的_config.yml文件。</li></ul><h4 id="修改菜单及创建分类页"><a href="#修改菜单及创建分类页" class="headerlink" title="修改菜单及创建分类页"></a>修改菜单及创建分类页</h4><ul><li><p>1:定位到 Hexo 站点目录下,在命令行输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p>新建出标签页</p><p>同样的道理，开启分类页的时候要输入<code>hexo new page categories</code>来新建出分类页。</p></li><li><p>2:设置页面类型：编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>3:修改 主题配置 文件下的menu项：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  #about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure><h4 id="修改主题风格"><a href="#修改主题风格" class="headerlink" title="修改主题风格"></a>修改主题风格</h4><ul><li>Next自带四种主题风格，可以在主题配置文件搜索Scheme项，将需要的风格前的#去掉，注意只能开启一个风格。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure><h4 id="设置作者头像"><a href="#设置作者头像" class="headerlink" title="设置作者头像"></a>设置作者头像</h4><ul><li><p>编辑主题配置文件，搜索修改字段 avatar， 值设置成头像的链接地址。可以设置成在线的图片地址。也可以把图片放在本地。</p></li><li><p>本地设置：放置在source/images目录下，设置为url: /images/avatar.jpg</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # in theme directory(source/images): /images/avatar.gif</span><br><span class="line">  # in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class="line">  # You can also use other linking images.</span><br><span class="line">  url: /images/cat.jpg</span><br><span class="line">  # If true, the avatar would be dispalyed in circle.</span><br><span class="line">  rounded: false</span><br><span class="line">  # The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.</span><br><span class="line">  opacity: 1</span><br><span class="line">  # If true, the avatar would be rotated with the cursor.</span><br><span class="line">  rotated: true</span><br></pre></td></tr></table></figure><h4 id="设置作者昵称与站点描述"><a href="#设置作者昵称与站点描述" class="headerlink" title="设置作者昵称与站点描述"></a>设置作者昵称与站点描述</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site 网站</span><br><span class="line">title: #网站标题</span><br><span class="line">subtitle: #网站副标题</span><br><span class="line">description: #网站描述 主要用于SEO</span><br><span class="line">keywords: #网站关键词 主要用于SEO</span><br><span class="line">author:  #网站作者</span><br><span class="line">language: zh-CN #网站语言</span><br><span class="line">timezone: #网站时区：Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</span><br></pre></td></tr></table></figure><h4 id="设置代码高亮主题"><a href="#设置代码高亮主题" class="headerlink" title="设置代码高亮主题"></a>设置代码高亮主题</h4><ul><li>NexT 使用 <a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="noopener">Tomorrow Theme</a> 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 normal，night， night blue， night bright， night eighties：</li></ul><p><img src="./images/设置5种代码高亮主题.png" alt="Alt text"></p><ul><li>更改 highlight_theme 字段，将其值设定成你所喜爱的高亮主题，例如：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Code Highlight theme</span><br><span class="line"># Available values: normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">highlight_theme: night eighties</span><br></pre></td></tr></table></figure><h4 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h4><ul><li>侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件 中。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># Social Links.</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before `||` delimeter is the target permalink.</span><br><span class="line"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/yourname || github</span><br><span class="line">  E-Mail: mailto:yourname@qq.com || envelope</span><br><span class="line">  #Weibo: https://weibo.com/yourname || weibo</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br></pre></td></tr></table></figure><ul><li>设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键: <a href="https://www.lixint.me/www.fontawesome.com.cn" target="_blank" rel="noopener">Font Awesome</a> 图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀）。 enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: false</span><br></pre></td></tr></table></figure><h4 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h4><ul><li>越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要 主题配置文件 中填入 微信 和 支付宝 收款二维码图片地址 即可开启该功能。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Reward</span><br><span class="line"># If true, reward would be displayed in every article by default.</span><br><span class="line"># And you can show or hide one article specially through add page variable `reward: true/false`.</span><br><span class="line">reward:</span><br><span class="line">  enable: true</span><br><span class="line">  comment: 如果觉得文本对您有帮助，欢迎打赏</span><br><span class="line">  wechatpay: /images/wechat.png</span><br><span class="line">  alipay: /images/zhifubao.jpg</span><br><span class="line">  bitcoin: /images/qq.png</span><br></pre></td></tr></table></figure><p><strong>注意：将保存的图片放到 /source/images/图片名称</strong></p><h5 id="修改打赏字体不闪动"><a href="#修改打赏字体不闪动" class="headerlink" title="修改打赏字体不闪动"></a>修改打赏字体不闪动</h5><ul><li><p>鼠标一指就疯狂抖动。</p></li><li><p>修改文件next/source/css/_common/components/post/post-reward.styl，然后注释其中的函数#QR &gt; div:hover p函数即可。css文件注释用/ 和 / 包裹代码即可。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#QR &gt; div:hover p &#123;</span><br><span class="line">  animation: roll 0.1s infinite linear;</span><br><span class="line">  -webkit-animation: roll 0.1s infinite linear;</span><br><span class="line">  -moz-animation: roll 0.1s infinite linear;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这个post-reward.styl文件是跟按钮及图片相关的，如果需要修改关于打赏的其他属性，例如按钮大小，样式，图片大小等，都可以修改post-reward.styl文件实现。</li></ul><h4 id="开启友情链接-or-侧边栏推荐阅读"><a href="#开启友情链接-or-侧边栏推荐阅读" class="headerlink" title="开启友情链接 or 侧边栏推荐阅读"></a>开启友情链接 or 侧边栏推荐阅读</h4><ul><li><p>主题配置文件 中搜索links_title字段，修改links_icon、links_title、links_layout、links四个字段的内容实现自定义风格。</p></li><li><p>link_icon是title前面的图标，用法跟之前的社交链接的图标用法是一样的， 用Font Awesome图标。<br>links_title为标题，如果是作为友情链接使用，可以设置为<br>links_title: 友情链接<br>在links字段设置友情链接名字及链接</p></li><li><p>这个模块的自由度比较高，可以用来放置友情链接，也可以放置推荐阅读。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Blog rolls</span><br><span class="line">links_icon: link</span><br><span class="line">links_title: Links</span><br><span class="line">links_layout: block</span><br><span class="line">#links_layout: inline</span><br><span class="line">#links:</span><br><span class="line">  #Title: http://example.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;从零开始搭建博客第一部分，Github注册及Github Pages建立&lt;/p&gt;
&lt;h2 id=&quot;什么是-Hexo？&quot;&gt;&lt;a href=&quot;#什么是-Hexo？&quot; class=&quot;headerlink&quot; title=&quot;什么是 Hexo？&quot;&gt;&lt;/a&gt;什么是 Hexo？&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="Hexo+Node+Git搭建博客" scheme="http://wudiufo.github.io/tags/Hexo-Node-Git%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wudiufo.github.io/2018/12/02/hello-world/"/>
    <id>http://wudiufo.github.io/2018/12/02/hello-world/</id>
    <published>2018-12-02T14:47:52.248Z</published>
    <updated>2018-12-02T14:47:52.249Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
